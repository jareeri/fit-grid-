{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n\n// const Exercises = () => {\n//   const [exercises, setExercises] = useState([]);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [selectedCategory, setSelectedCategory] = useState('All');\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const exercisesPerPage = 12;\n\n//   useEffect(() => {\n//     const fetchExercises = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:3000/Exercises');\n//         setExercises(response.data);\n//       } catch (error) {\n//         console.error('Error fetching exercises: ', error);\n//       }\n//     };\n\n//     fetchExercises();\n//   }, []);\n\n//   const indexOfLastExercise = currentPage * exercisesPerPage;\n//   const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n//   const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\n\n//   // Local filtering based on the selected category\n//   const filteredExercises =\n//     selectedCategory === 'All'\n//       ? currentExercises\n//       : currentExercises.filter((exercise) => exercise.category.toLowerCase() === selectedCategory.toLowerCase());\n\n//   // Filter exercises based on search term\n//   const searchedExercises = filteredExercises.filter(\n//     (exercise) => exercise.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n//   const totalPages = Math.ceil(searchedExercises.length / exercisesPerPage);\n\n//   const handlePageChange = (pageNumber) => {\n//     setCurrentPage(pageNumber);\n//   };\n\n//   const categories = ['All', 'Cardio', 'Strength', 'Flexibility', 'Balance'];\n\n//   return (\n//     <div className=\" mx-28 my-28\">\n//       <div className=\"flex items-center justify-between mb-8\">\n//         <div className=\"flex items-center space-x-4\">\n//           <label htmlFor=\"category\" className=\"text-gray-800 font-bold\">\n//             Category:\n//           </label>\n//           <select\n//             id=\"category\"\n//             className=\"p-2 border border-gray-300 rounded-md\"\n//             value={selectedCategory}\n//             onChange={(e) => setSelectedCategory(e.target.value)}\n//           >\n//             {categories.map((category) => (\n//               <option key={category} value={category}>\n//                 {category}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n\n//         <div className=\"flex items-center space-x-4\">\n//           <label htmlFor=\"search\" className=\"text-gray-800 font-bold\">\n//             Search:\n//           </label>\n//           <div className=\"relative text-gray-600 focus-within:text-gray-400\">\n//             <span className=\"absolute inset-y-0 left-0 flex items-center pl-2\">\n//               <button type=\"submit\" className=\"p-1 focus:outline-none focus:shadow-outline\">\n//                 <svg\n//                   fill=\"none\"\n//                   stroke=\"currentColor\"\n//                   strokeLinecap=\"round\"\n//                   strokeLinejoin=\"round\"\n//                   strokeWidth=\"2\"\n//                   viewBox=\"0 0 24 24\"\n//                   className=\"w-6 h-6\"\n//                 >\n//                   <path d=\"M21 21l-5.2-5.2\"></path>\n//                   <circle cx=\"10\" cy=\"10\" r=\"8\"></circle>\n//                 </svg>\n//               </button>\n//             </span>\n//             <input\n//               type=\"search\"\n//               id=\"search\"\n//               className=\"py-2 pl-10 text-sm text-white bg-gray-200 rounded-md focus:outline-none focus:bg-white focus:text-gray-900\"\n//               placeholder=\"Search exercises...\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"grid gap-10 grid-cols-1 sm:grid-cols-2 lg:grid-cols-4\">\n//         {searchedExercises.map((exercise) => (\n//           <div key={exercise.id} className=\"overflow-hidden rounded shadow-lg hover:shadow-xl\">\n\n//               <img\n//                 className=\"w-full h-56 md:h-64 xl:h-80 object-cover\"\n//                 src={exercise.image}\n//                 alt={exercise.title}\n//               />\n//               <div className=\"p-4\">\n//                 <p className=\"text-lg font-bold text-gray-800\">{exercise.name}</p>\n//                 <p className=\"mt-1 text-sm text-gray-600\">{exercise.category}</p>\n\n//               </div>\n\n//           </div>\n//         ))}\n//       </div>\n\n//       <div className=\"flex justify-center mt-8\">\n//         <button\n//           className={`mx-2 p-2 bg-gray-800 text-white hover:bg-gray-700 focus:outline-none rounded-full ${\n//             currentPage === 1 ? 'opacity-50 cursor-not-allowed' : ''\n//           }`}\n//           onClick={() => handlePageChange(currentPage - 1)}\n//           disabled={currentPage === 1}\n//         >\n//           Prev\n//         </button>\n//         {[1, 2, 3].map((number) => (\n//           <button\n//             key={number}\n//             onClick={() => handlePageChange(number)}\n//             className={`mx-2 p-2 bg-gray-800 text-white hover:bg-gray-700 focus:outline-none rounded-full ${\n//               currentPage === number ? 'bg-gray-800' : ''\n//             }`}\n//           >\n//             {number}\n//           </button>\n//         ))}\n//         <button\n//           className={`mx-2 p-2 bg-gray-800 text-white hover:bg-gray-700 focus:outline-none rounded-full ${\n//             currentPage === totalPages ? 'opacity-50 cursor-not-allowed' : ''\n//           }`}\n//           onClick={() => handlePageChange(currentPage + 1)}\n//           disabled={currentPage === totalPages}\n//         >\n//           Next\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Exercises;","map":{"version":3,"names":[],"sources":["C:/Users/Orange/Desktop/Masterpiece/client/src/Pages/Exercises.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// const Exercises = () => {\r\n//   const [exercises, setExercises] = useState([]);\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const [selectedCategory, setSelectedCategory] = useState('All');\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const exercisesPerPage = 12;\r\n\r\n//   useEffect(() => {\r\n//     const fetchExercises = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:3000/Exercises');\r\n//         setExercises(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching exercises: ', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchExercises();\r\n//   }, []);\r\n\r\n//   const indexOfLastExercise = currentPage * exercisesPerPage;\r\n//   const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\r\n//   const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\r\n\r\n//   // Local filtering based on the selected category\r\n//   const filteredExercises =\r\n//     selectedCategory === 'All'\r\n//       ? currentExercises\r\n//       : currentExercises.filter((exercise) => exercise.category.toLowerCase() === selectedCategory.toLowerCase());\r\n\r\n//   // Filter exercises based on search term\r\n//   const searchedExercises = filteredExercises.filter(\r\n//     (exercise) => exercise.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n//   );\r\n//   const totalPages = Math.ceil(searchedExercises.length / exercisesPerPage);\r\n\r\n//   const handlePageChange = (pageNumber) => {\r\n//     setCurrentPage(pageNumber);\r\n//   };\r\n\r\n//   const categories = ['All', 'Cardio', 'Strength', 'Flexibility', 'Balance'];\r\n\r\n//   return (\r\n//     <div className=\" mx-28 my-28\">\r\n//       <div className=\"flex items-center justify-between mb-8\">\r\n//         <div className=\"flex items-center space-x-4\">\r\n//           <label htmlFor=\"category\" className=\"text-gray-800 font-bold\">\r\n//             Category:\r\n//           </label>\r\n//           <select\r\n//             id=\"category\"\r\n//             className=\"p-2 border border-gray-300 rounded-md\"\r\n//             value={selectedCategory}\r\n//             onChange={(e) => setSelectedCategory(e.target.value)}\r\n//           >\r\n//             {categories.map((category) => (\r\n//               <option key={category} value={category}>\r\n//                 {category}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div className=\"flex items-center space-x-4\">\r\n//           <label htmlFor=\"search\" className=\"text-gray-800 font-bold\">\r\n//             Search:\r\n//           </label>\r\n//           <div className=\"relative text-gray-600 focus-within:text-gray-400\">\r\n//             <span className=\"absolute inset-y-0 left-0 flex items-center pl-2\">\r\n//               <button type=\"submit\" className=\"p-1 focus:outline-none focus:shadow-outline\">\r\n//                 <svg\r\n//                   fill=\"none\"\r\n//                   stroke=\"currentColor\"\r\n//                   strokeLinecap=\"round\"\r\n//                   strokeLinejoin=\"round\"\r\n//                   strokeWidth=\"2\"\r\n//                   viewBox=\"0 0 24 24\"\r\n//                   className=\"w-6 h-6\"\r\n//                 >\r\n//                   <path d=\"M21 21l-5.2-5.2\"></path>\r\n//                   <circle cx=\"10\" cy=\"10\" r=\"8\"></circle>\r\n//                 </svg>\r\n//               </button>\r\n//             </span>\r\n//             <input\r\n//               type=\"search\"\r\n//               id=\"search\"\r\n//               className=\"py-2 pl-10 text-sm text-white bg-gray-200 rounded-md focus:outline-none focus:bg-white focus:text-gray-900\"\r\n//               placeholder=\"Search exercises...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"grid gap-10 grid-cols-1 sm:grid-cols-2 lg:grid-cols-4\">\r\n//         {searchedExercises.map((exercise) => (\r\n//           <div key={exercise.id} className=\"overflow-hidden rounded shadow-lg hover:shadow-xl\">\r\n            \r\n//               <img\r\n//                 className=\"w-full h-56 md:h-64 xl:h-80 object-cover\"\r\n//                 src={exercise.image}\r\n//                 alt={exercise.title}\r\n//               />\r\n//               <div className=\"p-4\">\r\n//                 <p className=\"text-lg font-bold text-gray-800\">{exercise.name}</p>\r\n//                 <p className=\"mt-1 text-sm text-gray-600\">{exercise.category}</p>\r\n               \r\n//               </div>\r\n        \r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       <div className=\"flex justify-center mt-8\">\r\n//         <button\r\n//           className={`mx-2 p-2 bg-gray-800 text-white hover:bg-gray-700 focus:outline-none rounded-full ${\r\n//             currentPage === 1 ? 'opacity-50 cursor-not-allowed' : ''\r\n//           }`}\r\n//           onClick={() => handlePageChange(currentPage - 1)}\r\n//           disabled={currentPage === 1}\r\n//         >\r\n//           Prev\r\n//         </button>\r\n//         {[1, 2, 3].map((number) => (\r\n//           <button\r\n//             key={number}\r\n//             onClick={() => handlePageChange(number)}\r\n//             className={`mx-2 p-2 bg-gray-800 text-white hover:bg-gray-700 focus:outline-none rounded-full ${\r\n//               currentPage === number ? 'bg-gray-800' : ''\r\n//             }`}\r\n//           >\r\n//             {number}\r\n//           </button>\r\n//         ))}\r\n//         <button\r\n//           className={`mx-2 p-2 bg-gray-800 text-white hover:bg-gray-700 focus:outline-none rounded-full ${\r\n//             currentPage === totalPages ? 'opacity-50 cursor-not-allowed' : ''\r\n//           }`}\r\n//           onClick={() => handlePageChange(currentPage + 1)}\r\n//           disabled={currentPage === totalPages}\r\n//         >\r\n//           Next\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Exercises;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}