{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orange\\\\Desktop\\\\Masterpiece\\\\client\\\\src\\\\Components\\\\users\\\\PlanPricing.jsx\";\n// import React, { useState, useEffect } from 'react';\n// import { Link, useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import queryString from 'query-string';\n\n// const PlanPricing = () => {\n//   const { id } = useParams();\n//   const [pricingData, setPricingData] = useState([]);\n//   const [createModalOpen, setCreateModalOpen] = useState(false);\n//   const [updateModalOpen, setUpdateModalOpen] = useState(false);\n//   const [newPlan, setNewPlan] = useState({ name: '', price: '', description: '' });\n//   const [selectedPlan, setSelectedPlan] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await axios.post(`http://localhost:8080/getplansfortrainer/${id}`);\n//         // Check if the response is an array or a single object\n//         const data = Array.isArray(response.data) ? response.data : [response.data];\n//         setPricingData(data);\n//       } catch (error) {\n//         console.error('Error fetching pricing data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, [id]);\n\n//   const handleBuyNow = (price) => {\n//     const queryParams = queryString.stringify({ price });\n//     window.location.href = `/payment?${queryParams}`;\n//   };\n\n//   const handleCreatePlan = async () => {\n//     try {\n//       const response = await axios.post('http://localhost:8080/createplan', newPlan);\n//       setPricingData([...pricingData, response.data]);\n//       setCreateModalOpen(false);\n//       setNewPlan({ name: '', price: '', description: '' });\n//     } catch (error) {\n//       console.error('Error creating pricing plan:', error);\n//     }\n//   };\n\n//   const handleUpdatePlan = async () => {\n//     if (!selectedPlan) return;\n\n//     try {\n//       const response = await axios.put(`http://localhost:8080/updateplan/${selectedPlan.id}`, selectedPlan);\n//       setPricingData(pricingData.map(plan => (plan.id === response.data.id ? response.data : plan)));\n//       setUpdateModalOpen(false);\n//       setSelectedPlan(null);\n//     } catch (error) {\n//       console.error('Error updating pricing plan:', error);\n//     }\n//   };\n\n//   const handleDeletePlan = async (planId) => {\n//     try {\n//       await axios.delete(`http://localhost:8080/deleteplan/${planId}`);\n//       setPricingData(pricingData.filter(plan => plan.id !== planId));\n//     } catch (error) {\n//       console.error('Error deleting pricing plan:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {/* ... (your existing code) */}\n//       {/* Add a button to open the create modal */}\n//       <button onClick={() => setCreateModalOpen(true)}>Create Plan</button>\n\n//       {/* Create Plan Modal */}\n//       {createModalOpen && (\n//         <div>\n//           <div>\n//             <label>Name:</label>\n//             <input type=\"text\" value={newPlan.name} onChange={(e) => setNewPlan({ ...newPlan, name: e.target.value })} />\n//           </div>\n//           <div>\n//             <label>Price:</label>\n//             <input type=\"text\" value={newPlan.price} onChange={(e) => setNewPlan({ ...newPlan, price: e.target.value })} />\n//           </div>\n//           <div>\n//             <label>Description:</label>\n//             <input type=\"text\" value={newPlan.description} onChange={(e) => setNewPlan({ ...newPlan, description: e.target.value })} />\n//           </div>\n//           <button onClick={handleCreatePlan}>Create</button>\n//           <button onClick={() => setCreateModalOpen(false)}>Cancel</button>\n//         </div>\n//       )}\n\n//       {/* Update Plan Modal */}\n//       {updateModalOpen && selectedPlan && (\n//         <div>\n//           <div>\n//             <label>Name:</label>\n//             <input type=\"text\" value={selectedPlan.name} onChange={(e) => setSelectedPlan({ ...selectedPlan, name: e.target.value })} />\n//           </div>\n//           <div>\n//             <label>Price:</label>\n//             <input type=\"text\" value={selectedPlan.price} onChange={(e) => setSelectedPlan({ ...selectedPlan, price: e.target.value })} />\n//           </div>\n//           <div>\n//             <label>Description:</label>\n//             <input type=\"text\" value={selectedPlan.description} onChange={(e) => setSelectedPlan({ ...selectedPlan, description: e.target.value })} />\n//           </div>\n//           <button onClick={handleUpdatePlan}>Update</button>\n//           <button onClick={() => setUpdateModalOpen(false)}>Cancel</button>\n//         </div>\n//       )}\n\n//       {/* Pricing plans with delete button */}\n//       {pricingData.map((item, index) => (\n//         <div key={index}>\n//           <h2>{item.name}</h2>\n//           <p>{item.price}</p>\n//           <p>{item.description}</p>\n//           <button onClick={() => handleBuyNow(item.price)}>Buy Now</button>\n//           <button onClick={() => { setUpdateModalOpen(true); setSelectedPlan(item); }}>Update</button>\n//           <button onClick={() => handleDeletePlan(item.id)}>Delete</button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default PlanPricing;\n// cd \nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlanPricing = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_c = PlanPricing;\nexport default PlanPricing;\nvar _c;\n$RefreshReg$(_c, \"PlanPricing\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PlanPricing","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Orange/Desktop/Masterpiece/client/src/Components/users/PlanPricing.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Link, useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import queryString from 'query-string';\r\n\r\n// const PlanPricing = () => {\r\n//   const { id } = useParams();\r\n//   const [pricingData, setPricingData] = useState([]);\r\n//   const [createModalOpen, setCreateModalOpen] = useState(false);\r\n//   const [updateModalOpen, setUpdateModalOpen] = useState(false);\r\n//   const [newPlan, setNewPlan] = useState({ name: '', price: '', description: '' });\r\n//   const [selectedPlan, setSelectedPlan] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await axios.post(`http://localhost:8080/getplansfortrainer/${id}`);\r\n//         // Check if the response is an array or a single object\r\n//         const data = Array.isArray(response.data) ? response.data : [response.data];\r\n//         setPricingData(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching pricing data:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [id]);\r\n\r\n//   const handleBuyNow = (price) => {\r\n//     const queryParams = queryString.stringify({ price });\r\n//     window.location.href = `/payment?${queryParams}`;\r\n//   };\r\n\r\n//   const handleCreatePlan = async () => {\r\n//     try {\r\n//       const response = await axios.post('http://localhost:8080/createplan', newPlan);\r\n//       setPricingData([...pricingData, response.data]);\r\n//       setCreateModalOpen(false);\r\n//       setNewPlan({ name: '', price: '', description: '' });\r\n//     } catch (error) {\r\n//       console.error('Error creating pricing plan:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleUpdatePlan = async () => {\r\n//     if (!selectedPlan) return;\r\n\r\n//     try {\r\n//       const response = await axios.put(`http://localhost:8080/updateplan/${selectedPlan.id}`, selectedPlan);\r\n//       setPricingData(pricingData.map(plan => (plan.id === response.data.id ? response.data : plan)));\r\n//       setUpdateModalOpen(false);\r\n//       setSelectedPlan(null);\r\n//     } catch (error) {\r\n//       console.error('Error updating pricing plan:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDeletePlan = async (planId) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:8080/deleteplan/${planId}`);\r\n//       setPricingData(pricingData.filter(plan => plan.id !== planId));\r\n//     } catch (error) {\r\n//       console.error('Error deleting pricing plan:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* ... (your existing code) */}\r\n//       {/* Add a button to open the create modal */}\r\n//       <button onClick={() => setCreateModalOpen(true)}>Create Plan</button>\r\n\r\n//       {/* Create Plan Modal */}\r\n//       {createModalOpen && (\r\n//         <div>\r\n//           <div>\r\n//             <label>Name:</label>\r\n//             <input type=\"text\" value={newPlan.name} onChange={(e) => setNewPlan({ ...newPlan, name: e.target.value })} />\r\n//           </div>\r\n//           <div>\r\n//             <label>Price:</label>\r\n//             <input type=\"text\" value={newPlan.price} onChange={(e) => setNewPlan({ ...newPlan, price: e.target.value })} />\r\n//           </div>\r\n//           <div>\r\n//             <label>Description:</label>\r\n//             <input type=\"text\" value={newPlan.description} onChange={(e) => setNewPlan({ ...newPlan, description: e.target.value })} />\r\n//           </div>\r\n//           <button onClick={handleCreatePlan}>Create</button>\r\n//           <button onClick={() => setCreateModalOpen(false)}>Cancel</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Update Plan Modal */}\r\n//       {updateModalOpen && selectedPlan && (\r\n//         <div>\r\n//           <div>\r\n//             <label>Name:</label>\r\n//             <input type=\"text\" value={selectedPlan.name} onChange={(e) => setSelectedPlan({ ...selectedPlan, name: e.target.value })} />\r\n//           </div>\r\n//           <div>\r\n//             <label>Price:</label>\r\n//             <input type=\"text\" value={selectedPlan.price} onChange={(e) => setSelectedPlan({ ...selectedPlan, price: e.target.value })} />\r\n//           </div>\r\n//           <div>\r\n//             <label>Description:</label>\r\n//             <input type=\"text\" value={selectedPlan.description} onChange={(e) => setSelectedPlan({ ...selectedPlan, description: e.target.value })} />\r\n//           </div>\r\n//           <button onClick={handleUpdatePlan}>Update</button>\r\n//           <button onClick={() => setUpdateModalOpen(false)}>Cancel</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Pricing plans with delete button */}\r\n//       {pricingData.map((item, index) => (\r\n//         <div key={index}>\r\n//           <h2>{item.name}</h2>\r\n//           <p>{item.price}</p>\r\n//           <p>{item.description}</p>\r\n//           <button onClick={() => handleBuyNow(item.price)}>Buy Now</button>\r\n//           <button onClick={() => { setUpdateModalOpen(true); setSelectedPlan(item); }}>Update</button>\r\n//           <button onClick={() => handleDeletePlan(item.id)}>Delete</button>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PlanPricing;\r\n// cd \r\nimport React from 'react'\r\n\r\nconst PlanPricing = () => {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlanPricing\r\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,oBACED,OAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAAAC,EAAA,GANKL,WAAW;AAQjB,eAAeA,WAAW;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}