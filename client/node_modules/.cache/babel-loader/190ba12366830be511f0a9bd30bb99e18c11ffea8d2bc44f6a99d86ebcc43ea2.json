{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orange\\\\Desktop\\\\Masterpiece\\\\client\\\\src\\\\Pages\\\\Class.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Pagination from './Pagination'; // Update the path accordingly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Class = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(3); // Adjust the number of items per page as needed\n\n  const data = [\n  // Your data array goes here\n  // Example:\n  {\n    name: 'Argon Design System',\n    budget: '$2,500 USD',\n    status: 'pending',\n    completion: 60\n  }\n  // Add more items as needed\n  ];\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block w-full overflow-x-auto \",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"items-center w-full bg-transparent border-collapse\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Class\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Budget\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Completion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.budget\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [item.completion, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        itemsPerPage: itemsPerPage,\n        totalItems: data.length,\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Class, \"cikLxKeg5wp1cwLLNtukS2x2SP8=\");\n_c = Class;\nexport default Class;\nvar _c;\n$RefreshReg$(_c, \"Class\");","map":{"version":3,"names":["React","useState","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","Class","_s","currentPage","setCurrentPage","itemsPerPage","data","name","budget","status","completion","indexOfLastItem","indexOfFirstItem","currentItems","slice","paginate","pageNumber","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","totalItems","length","_c","$RefreshReg$"],"sources":["C:/Users/Orange/Desktop/Masterpiece/client/src/Pages/Class.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Pagination from './Pagination'; // Update the path accordingly\r\n\r\nconst Class = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(3); // Adjust the number of items per page as needed\r\n\r\n  const data = [\r\n    // Your data array goes here\r\n    // Example:\r\n    {\r\n      name: 'Argon Design System',\r\n      budget: '$2,500 USD',\r\n      status: 'pending',\r\n      completion: 60,\r\n    },\r\n    // Add more items as needed\r\n  ];\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        {/* Your existing code here */}\r\n\r\n        <div className=\"block w-full overflow-x-auto \">\r\n          <table className=\"items-center w-full bg-transparent border-collapse\">\r\n            {/* Your table headers */}\r\n            <thead>\r\n              <tr>\r\n                {/* Example headers, replace with your own */}\r\n                <th>Class</th>\r\n                <th>Budget</th>\r\n                <th>Status</th>\r\n                <th>Completion</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* Map through currentItems instead of your existing data array */}\r\n              {currentItems.map((item, index) => (\r\n                <tr key={index}>\r\n                  {/* Render your table cells based on the item properties */}\r\n                  <td>{item.name}</td>\r\n                  <td>{item.budget}</td>\r\n                  <td>{item.status}</td>\r\n                  <td>\r\n                    {item.completion}%{/* Assuming completion is a percentage */}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <Pagination\r\n          itemsPerPage={itemsPerPage}\r\n          totalItems={data.length}\r\n          paginate={paginate}\r\n        />\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Class;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}