{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orange\\\\Desktop\\\\CraftVine-ehab\\\\client\\\\src\\\\Components\\\\Landing\\\\BestSellery.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BestSellery = () => {\n  _s();\n  const cardsPerPage = 4; // Number of cards to display per page\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // Your card data\n  const cardData = [{\n    name: 'Oliver Aguilerra',\n    role: 'Product Manager' /* ... other fields */\n  }, {\n    name: 'Marta Clermont',\n    role: 'Design Team Lead' /* ... other fields */\n  }, {\n    name: 'Anthony Geek',\n    role: 'CTO, Lorem Inc.' /* ... other fields */\n  }, {\n    name: 'Alice Melbourne',\n    role: 'Human Resources' /* ... other fields */\n  }\n  // Add more card data as needed\n  ];\n\n  // Calculate the indexes of the cards to display on the current page\n  const indexOfLastCard = currentPage * cardsPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n  const currentCards = cardData.slice(indexOfFirstCard, indexOfLastCard);\n\n  // Total number of pages\n  const totalPages = Math.ceil(cardData.length / cardsPerPage);\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-10 sm:grid-cols-2 lg:grid-cols-4\",\n      children: currentCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative overflow-hidden transition duration-300 transform rounded shadow-lg lg:hover:-translate-y-2 hover:shadow-2xl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-4\",\n      children: [...Array(totalPages)].map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: `mx-1 px-3 py-1 rounded-full ${currentPage === index + 1 ? 'bg-gray-800 text-white' : 'bg-gray-300 text-gray-800'}`,\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(BestSellery, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c = BestSellery;\nexport default BestSellery;\nvar _c;\n$RefreshReg$(_c, \"BestSellery\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BestSellery","_s","cardsPerPage","currentPage","setCurrentPage","cardData","name","role","indexOfLastCard","indexOfFirstCard","currentCards","slice","totalPages","Math","ceil","length","handlePageChange","pageNumber","children","className","map","card","index","fileName","_jsxFileName","lineNumber","columnNumber","Array","_","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Orange/Desktop/CraftVine-ehab/client/src/Components/Landing/BestSellery.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst BestSellery = () => {\n  const cardsPerPage = 4; // Number of cards to display per page\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // Your card data\n  const cardData = [\n    { name: 'Oliver Aguilerra', role: 'Product Manager', /* ... other fields */ },\n    { name: 'Marta Clermont', role: 'Design Team Lead', /* ... other fields */ },\n    { name: 'Anthony Geek', role: 'CTO, Lorem Inc.', /* ... other fields */ },\n    { name: 'Alice Melbourne', role: 'Human Resources', /* ... other fields */ },\n    // Add more card data as needed\n  ];\n\n  // Calculate the indexes of the cards to display on the current page\n  const indexOfLastCard = currentPage * cardsPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n  const currentCards = cardData.slice(indexOfFirstCard, indexOfLastCard);\n\n  // Total number of pages\n  const totalPages = Math.ceil(cardData.length / cardsPerPage);\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <div>\n      {/* Your existing code */}\n      <div className=\"grid gap-10 sm:grid-cols-2 lg:grid-cols-4\">\n        {currentCards.map((card, index) => (\n          <div key={index}>\n            {/* Your card rendering logic here */}\n            <div className=\"relative overflow-hidden transition duration-300 transform rounded shadow-lg lg:hover:-translate-y-2 hover:shadow-2xl\">\n              {/* ... (your card content) */}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Pagination buttons */}\n      <div className=\"flex justify-center mt-4\">\n        {[...Array(totalPages)].map((_, index) => (\n          <button\n            key={index + 1}\n            onClick={() => handlePageChange(index + 1)}\n            className={`mx-1 px-3 py-1 rounded-full ${\n              currentPage === index + 1 ? 'bg-gray-800 text-white' : 'bg-gray-300 text-gray-800'\n            }`}\n          >\n            {index + 1}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default BestSellery;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,YAAY,GAAG,CAAC,CAAC,CAAC;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;;EAEjD;EACA,MAAMQ,QAAQ,GAAG,CACf;IAAEC,IAAI,EAAE,kBAAkB;IAAEC,IAAI,EAAE,iBAAiB,CAAE;EAAuB,CAAC,EAC7E;IAAED,IAAI,EAAE,gBAAgB;IAAEC,IAAI,EAAE,kBAAkB,CAAE;EAAuB,CAAC,EAC5E;IAAED,IAAI,EAAE,cAAc;IAAEC,IAAI,EAAE,iBAAiB,CAAE;EAAuB,CAAC,EACzE;IAAED,IAAI,EAAE,iBAAiB;IAAEC,IAAI,EAAE,iBAAiB,CAAE;EAAuB;EAC3E;EAAA,CACD;;EAED;EACA,MAAMC,eAAe,GAAGL,WAAW,GAAGD,YAAY;EAClD,MAAMO,gBAAgB,GAAGD,eAAe,GAAGN,YAAY;EACvD,MAAMQ,YAAY,GAAGL,QAAQ,CAACM,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;;EAEtE;EACA,MAAMI,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACT,QAAQ,CAACU,MAAM,GAAGb,YAAY,CAAC;EAE5D,MAAMc,gBAAgB,GAAIC,UAAU,IAAK;IACvCb,cAAc,CAACa,UAAU,CAAC;EAC5B,CAAC;EAED,oBACElB,OAAA;IAAAmB,QAAA,gBAEEnB,OAAA;MAAKoB,SAAS,EAAC,2CAA2C;MAAAD,QAAA,EACvDR,YAAY,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC5BvB,OAAA;QAAAmB,QAAA,eAEEnB,OAAA;UAAKoB,SAAS,EAAC;QAAuH;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEjI;MAAC,GAJEJ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGN3B,OAAA;MAAKoB,SAAS,EAAC,0BAA0B;MAAAD,QAAA,EACtC,CAAC,GAAGS,KAAK,CAACf,UAAU,CAAC,CAAC,CAACQ,GAAG,CAAC,CAACQ,CAAC,EAAEN,KAAK,kBACnCvB,OAAA;QAEE8B,OAAO,EAAEA,CAAA,KAAMb,gBAAgB,CAACM,KAAK,GAAG,CAAC,CAAE;QAC3CH,SAAS,EAAG,+BACVhB,WAAW,KAAKmB,KAAK,GAAG,CAAC,GAAG,wBAAwB,GAAG,2BACxD,EAAE;QAAAJ,QAAA,EAEFI,KAAK,GAAG;MAAC,GANLA,KAAK,GAAG,CAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOR,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CAvDID,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAyDjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}