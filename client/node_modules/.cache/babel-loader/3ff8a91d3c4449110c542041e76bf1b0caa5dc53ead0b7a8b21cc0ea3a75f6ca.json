{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orange\\\\Desktop\\\\Masterpiece\\\\client\\\\src\\\\Components\\\\CheckoutForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ElementsConsumer, CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CardSection from \"./CardSection\";\nimport axios from \"axios\";\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CheckoutForm({\n  stripe,\n  elements\n}) {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    name,\n    price\n  } = location.search ? Object.fromEntries(new URLSearchParams(location.search)) : {};\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n\n    // Validate the form fields\n    if (!validateForm()) {\n      return;\n    }\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n    if (error) {\n      setErrorMessage(error.message);\n      setSuccessMessage(\"\"); // Clear success message if there was an error\n    } else {\n      // Continue with the rest of your code\n      setErrorMessage(\"\"); // Clear any previous error message\n\n      // Handle amount\n      if (paymentMethod) {\n        const {\n          id\n        } = paymentMethod;\n\n        // Pass the price to the backend\n        const response = await axios.post(\"http://localhost:8080/payment\", {\n          amount: price * 100,\n          // Assuming price is in dollars, convert to cents\n          id\n        });\n        if (response.data.success) {\n          setSuccessMessage(\"Payment successful!\"); // Set success message\n\n          // Redirect to the home page after successful payment\n          navigate('/'); // You can replace '/' with the actual home page path\n        } else {\n          console.log(\"Payment failed\");\n          // Handle failure appropriately\n        }\n      } else {\n        console.log(\"Payment method is undefined\");\n        // Handle undefined paymentMethod\n      }\n    }\n  };\n\n  // Basic form validation function\n  const validateForm = () => {\n    // You can add more sophisticated validation as needed\n    const cardElement = elements.getElement(CardElement);\n    if (!cardElement) {\n      setErrorMessage(\"Please enter card information\");\n      return false;\n    }\n    setErrorMessage(\"\");\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"product-title\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"product-price\",\n        children: `$${price}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-pay\",\n        children: \"Buy Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 mt-2\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 24\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-green-500 mt-2\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckoutForm, \"tt+7nCUcbdiCJkTI8E+W1UNfmtc=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useState","ElementsConsumer","CardElement","useStripe","useElements","CardSection","axios","useLocation","useNavigate","jsxDEV","_jsxDEV","CheckoutForm","stripe","elements","_s","location","navigate","name","price","search","Object","fromEntries","URLSearchParams","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleSubmit","event","preventDefault","validateForm","error","paymentMethod","createPaymentMethod","type","card","getElement","message","id","response","post","amount","data","success","console","log","cardElement","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Orange/Desktop/Masterpiece/client/src/Components/CheckoutForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { ElementsConsumer, CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport CardSection from \"./CardSection\";\r\nimport axios from \"axios\";\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nfunction CheckoutForm({ stripe, elements }) {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { name, price } = location.search\r\n    ? Object.fromEntries(new URLSearchParams(location.search))\r\n    : {};\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    // Validate the form fields\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: elements.getElement(CardElement),\r\n    });\r\n\r\n    if (error) {\r\n      setErrorMessage(error.message);\r\n      setSuccessMessage(\"\"); // Clear success message if there was an error\r\n    } else {\r\n      // Continue with the rest of your code\r\n      setErrorMessage(\"\"); // Clear any previous error message\r\n\r\n      // Handle amount\r\n      if (paymentMethod) {\r\n        const { id } = paymentMethod;\r\n\r\n        // Pass the price to the backend\r\n        const response = await axios.post(\"http://localhost:8080/payment\", {\r\n          amount: price * 100, // Assuming price is in dollars, convert to cents\r\n          id,\r\n        });\r\n\r\n        if (response.data.success) {\r\n          setSuccessMessage(\"Payment successful!\"); // Set success message\r\n\r\n          // Redirect to the home page after successful payment\r\n          navigate('/'); // You can replace '/' with the actual home page path\r\n        } else {\r\n          console.log(\"Payment failed\");\r\n          // Handle failure appropriately\r\n        }\r\n      } else {\r\n        console.log(\"Payment method is undefined\");\r\n        // Handle undefined paymentMethod\r\n      }\r\n    }\r\n  };\r\n\r\n  // Basic form validation function\r\n  const validateForm = () => {\r\n    // You can add more sophisticated validation as needed\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    if (!cardElement) {\r\n      setErrorMessage(\"Please enter card information\");\r\n      return false;\r\n    }\r\n\r\n    setErrorMessage(\"\");\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"product-info\">\r\n        <h3 className=\"product-title\">{name}</h3>\r\n        <h4 className=\"product-price\">{`$${price}`}</h4>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <CardSection />\r\n        <button className=\"btn-pay\">Buy Now</button>\r\n      </form>\r\n      {errorMessage && <div className=\"text-red-500 mt-2\">{errorMessage}</div>}\r\n      {successMessage && <div className=\"text-green-500 mt-2\">{successMessage}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}